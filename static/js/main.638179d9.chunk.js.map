{"version":3,"sources":["components/Mute/Mute.js","components/Mute/index.js","data/actions/state.js","components/Landing/Landing.js","axios.js","data/actions/api.js","components/Landing/index.js","components/HostQuestion/HostQuestion.js","components/HostQuestion/index.js","components/Button/index.js","components/FinalAnswerAlert/FinalAnswerAlert.js","components/FinalAnswerAlert/index.js","components/Reset/Reset.js","components/Reset/index.js","components/Fireworks/index.js","components/CongratulationsAlert/CongratulationsAlert.js","components/CongratulationsAlert/index.js","components/CorrectAnswerAlert/index.js","components/WrongAnswerAlert/WrongAnswerAlert.js","components/WrongAnswerAlert/index.js","components/Spinner/index.js","components/Alert/Alert.js","components/Alert/index.js","components/Question/Question.js","components/Question/index.js","components/FourOhFour/index.js","App.js","data/initialState.js","data/reducer.js","data/store.js","index.js","assets/images/logoTransparent.png","assets/images/audio.svg","assets/images/mute.svg","assets/sounds/openingTheme.mp3","assets/sounds/crowdapplause.mp3","assets/sounds/letsPlay.mp3","assets/sounds/upTo1000music.mp3","assets/sounds/upTo32000music.mp3","assets/sounds/finalAnswer.mp3","assets/sounds/correctAnswer.mp3","assets/sounds/wrongAnswer.mp3"],"names":["Mute","isMuted","handleSound","src","soundOff","soundOn","onClick","alt","className","connect","state","dispatch","type","Landing","props","playerName","handleStart","bind","handlePlayerName","e","this","setState","currentTarget","value","logo","htmlFor","style","color","onChange","id","to","disabled","url","openingTheme","playStatus","Sound","status","PLAYING","autoLoad","loop","Component","axios","create","baseURL","headers","Accept","getQuestion","getState","difficulty","currentDifficulty","get","then","data","currentQuestion","content","amount","answerA","answer","answers","correct","answerB","answerC","answerD","updateCurrentQuestion","name","startGame","setGame","HostQuestion","currentAmount","Button","text","click","btnStyle","backgroundColor","FinalAnswerAlert","selected","handleFinalAnswer","Reset","handleReset","Fireworks","CongratulationsAlert","statistics","applause","CorrectAlert","handleSubmit","WrongAnswerAlert","correctAnswer","Spinner","height","width","Alert","gameOverLoaded","CorrectAnswerAlert","Question","question","isCorrectA","isCorrectB","isCorrectC","isCorrectD","sound","answerCorrect","handleAnswerClick","handleSoundFinishedPlaying","num","setTimeout","handlePostGame","prevProps","longAnswers","length","longAnswersMobile","longQuestions","longQuestionsMobile","letsPlay","onFinishedPlaying","upTo1000music","upTo32000music","finalAnswerSound","correctAnswerSound","wrongAnswerSound","handleLoad","post","score","setStatistics","FourOhFour","App","exact","path","initialState","reducer","action","setSound","updateQuestion","setReset","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","persistState","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.638179d9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport soundOn from \"./../../assets/images/audio.svg\";\r\nimport soundOff from \"./../../assets/images/mute.svg\";\r\nimport \"./../../assets/css/sound.css\";\r\n\r\nconst Mute = ({ isMuted, handleSound }) => (\r\n    <>\r\n        <img\r\n            src={ isMuted ? soundOff : soundOn }\r\n            onClick={ handleSound }\r\n            alt=\"mute/unmute icon\"\r\n            className=\"sound\"\r\n        />\r\n    </>\r\n)\r\n\r\nexport default Mute;","import { connect } from \"react-redux\";\r\nimport Mute from \"./Mute\";\r\n\r\nimport { setSound } from \"./../../data/actions/state\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isMuted: state.isMuted,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        handleSound:() => dispatch(setSound()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mute);","export const updateCurrentQuestion = (data) => {\r\n    return {\r\n        type: \"UPDATE_QUESTION\",\r\n        currentQuestion: {\r\n            content: data[0].content,\r\n            amount: data[0].amount,\r\n            answerA: {\r\n                answer: data[0].answers[0].answer,\r\n                correct: data[0].answers[0].correct\r\n            },\r\n    \r\n            answerB: {\r\n                answer: data[0].answers[1].answer,\r\n                correct: data[0].answers[1].correct\r\n            },\r\n    \r\n            answerC: {\r\n                answer: data[0].answers[2].answer,\r\n                correct: data[0].answers[2].correct\r\n            },\r\n    \r\n            answerD: {\r\n                answer: data[0].answers[3].answer,\r\n                correct: data[0].answers[3].correct\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\nexport const startGame = (data, name) => {\r\n    return {\r\n        type: \"START_GAME\",\r\n        playerName: name.playerName,\r\n        currentQuestion: {\r\n            content: data[0].content,\r\n            amount: data[0].amount,\r\n            answerA: {\r\n                answer: data[0].answers[0].answer,\r\n                correct: data[0].answers[0].correct\r\n            },\r\n    \r\n            answerB: {\r\n                answer: data[0].answers[1].answer,\r\n                correct: data[0].answers[1].correct\r\n            },\r\n    \r\n            answerC: {\r\n                answer: data[0].answers[2].answer,\r\n                correct: data[0].answers[2].correct\r\n            },\r\n    \r\n            answerD: {\r\n                answer: data[0].answers[3].answer,\r\n                correct: data[0].answers[3].correct\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\nexport const resetGame = () => {\r\n    return {\r\n        type: \"RESET_GAME\",\r\n    }\r\n}\r\n\r\nexport const setSound = () => {\r\n    return {\r\n        type: \"SET_SOUND\",\r\n    }\r\n}\r\n\r\nexport const setStatistics = (data) => {\r\n    return {\r\n        type: \"SET_STATISTICS\",\r\n        data: data,\r\n    }\r\n}","import React, { Component } from \"react\";\n\nimport { Link } from \"react-router-dom\";\nimport Sound from 'react-sound';\nimport Mute from \"./../Mute\";\nimport openingTheme from \"./../../assets/sounds/openingTheme.mp3\";\nimport logo from \"./../../assets/images/logoTransparent.png\";\nimport \"./../../assets/css/landing.css\";\n\nclass Landing extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n            playerName: \"\",\n        }\n              \n        this.handleStart = this.handleStart.bind(this);\n        this.handlePlayerName = this.handlePlayerName.bind(this);\n    }\n\n    handlePlayerName(e) {\n        this.setState({ playerName: e.currentTarget.value })\n    }\n\n    handleStart() {\n        this.props.handleStart({...this.state});\n    }\n\n    render() {\n\n        return(\n            <div className=\"landing-bg\">\n                <Mute/>\n                <img\n                    src={ logo }\n                    alt=\"logo\"\n                    className=\"logo\"\n                />\n                <form className=\"landing-form\">\n                    <label\n                        className=\"label\"\n                        htmlFor=\"name\"\n                        style={{ color: \"white\" }}\n                    >\n                        Enter Name\n                    </label>\n                    <input\n                        className=\"input\"\n                        type=\"text\"\n                        value={ this.state.playerName }\n                        onChange={ this.handlePlayerName }\n                        id=\"name\"\n                    />\n                </form>\n                <Link to=\"/game\" className=\"landing-link\">\n                    <button\n                        className=\"landing-btn\"\n                        onClick={ this.handleStart }\n                        disabled={ this.state.playerName === \"\" }\n                    >\n                        Start Game\n                    </button>\n                </Link>\n                { !this.props.isMuted ?\n                <Sound\n                    url={ openingTheme }\n                    playStatus={ Sound.status.PLAYING }\n                    autoLoad={ true }\n                    loop={ true }\n                />\n                : null }\n            </div>\n        );\n    }\n}\n  \nexport default Landing;\n","// import the axios library\r\nimport axios from \"axios\";\r\n\r\n// return a new version of axios with useful settings applied\r\nexport default axios.create({\r\n        baseURL: \"http://ec2-18-130-184-16.eu-west-2.compute.amazonaws.com/api\",\r\n        headers: {\r\n        Accept: \"application/json\",\r\n    },\r\n});","import axios from \"./../../axios\";\r\nimport { updateCurrentQuestion } from \"./state\";\r\nimport { setStatistics } from \"./state\";\r\nimport { startGame } from \"./state\";\r\n\r\nexport const getQuestion = () => {\r\n    return (dispatch, getState) => {\r\n        const difficulty = getState().currentDifficulty + 1;\r\n\r\n        axios.get(`questions/${difficulty}`)\r\n        .then(({ data }) => {\r\n            dispatch(updateCurrentQuestion(data.data));\r\n        });\r\n    };\r\n}\r\n\r\nexport const setGame = (name) => {\r\n    return (dispatch, getState) => {\r\n        const difficulty = getState().currentDifficulty;\r\n\r\n        axios.get(`questions/${difficulty}`)\r\n        .then(({ data }) => {\r\n            dispatch(startGame(data.data, name));\r\n        });\r\n    };\r\n}\r\n\r\nexport const postGame = () => {\r\n    return (dispatch, getState) => {\r\n        let { currentDifficulty } = getState();\r\n\r\n        axios.post('games/statistics', {score: currentDifficulty})\r\n        .then(() => {\r\n            axios.get('games/statistics')\r\n            .then(({ data }) => {\r\n                dispatch(setStatistics(data));\r\n            });\r\n        });\r\n    }\r\n}\r\n","import { connect } from \"react-redux\";\nimport Landing from \"./Landing\";\n\nimport { setGame } from \"./../../data/actions/api\";\n\nconst mapStateToProps = (state) => {\n    return {\n        isMuted: state.isMuted,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleStart: (name) => dispatch(setGame(name)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Landing);","import React from \"react\";\n\nconst HostQuestion = ({ currentDifficulty, currentAmount }) => (\n    <p>Host: Question number { currentDifficulty } for £{ currentAmount }</p>\n)\n\nexport default HostQuestion;","import { connect } from \"react-redux\";\nimport HostQuestion from \"./HostQuestion\";\n\nconst mapStateToProps = (state) => {\n    return {\n        currentDifficulty: state.currentDifficulty,\n        currentAmount: state.currentQuestion.amount,\n    };\n};\n\nexport default connect(mapStateToProps, null)(HostQuestion);","import React from \"react\";\r\n\r\nconst Button = ({ text, click, color, btnStyle }) => (\r\n    <button\r\n        className={ btnStyle }\r\n        onClick={ click }\r\n        style={{\r\n            backgroundColor: color,\r\n        }}\r\n    >\r\n        { text }\r\n    </button>\r\n)\r\n\r\nexport default Button;","import React from \"react\";\n\nimport Button from \"./../Button\";\n\nconst FinalAnswerAlert = ({  selected, handleFinalAnswer, playerName, }) => (\n    <>\n        <p>Host: Answer { selected === 1 ? \"A\" : (selected === 2 ? \"B\" : (selected === 3 ? \"C\" : \"D\")) }, is that your final answer { playerName }?</p>\n        <Button\n            text={ \"Final Answer\" }\n            color={ \"#ffc107\" }\n            click={ handleFinalAnswer }\n            btnStyle={ \"button\" }\n        />\n    </>\n)\n\nexport default FinalAnswerAlert;","import { connect } from \"react-redux\";\nimport FinalAnswerAlert from \"./FinalAnswerAlert\";\n\nconst mapStateToProps = (state) => {\n    return {\n        playerName: state.playerName,\n    };\n};\n\nexport default connect(mapStateToProps, null)(FinalAnswerAlert);","import React from \"react\";\nimport Button from \"./../Button\";\n\nimport { Link } from \"react-router-dom\";\n\n// a component to erase all data and start over from the \"create-players\" page\nconst Reset = ({ handleReset, btnStyle }) => (\n    <Link to=\"/\">\n        <Button\n            click={ handleReset }\n            text={ \"Start Over\" }\n            color={ \"#dc3545\" }\n            btnStyle={ btnStyle }\n        />\n    </Link>\n);\nexport default Reset;\n\n","import { connect } from \"react-redux\";\nimport Reset from \"./Reset\";\n\nimport { resetGame } from \"../../data/actions/state\";\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleReset: () => dispatch(resetGame()),\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(Reset);","import React from \"react\";\n\nimport \"./../../assets/css/fireworks.css\";\n\nconst Fireworks = () => (\n    <div className=\"pyro\">\n        <div className=\"before\"></div>\n        <div className=\"after\"></div>\n    </div>\n)\n\nexport default Fireworks;","import React from \"react\";\nimport Sound from 'react-sound';\n\nimport Reset from \"./../Reset\";\nimport Fireworks from \"./../Fireworks\";\nimport applause from \"./../../assets/sounds/crowdapplause.mp3\";\n\nconst CongratulationsAlert = ({ statistics, playerName, isMuted }) => (\n    <>\n        <p>Congratulations { playerName }!<br/>\n        You are a Web Developer!</p>\n        <p>Well done! Only { 100 - statistics }% of players have won the game!</p>\n        <Reset btnStyle={\"winning-button\"} />\n        <Fireworks />\n        { !isMuted ?\n        <Sound\n            url={ applause }\n            playStatus={ Sound.status.PLAYING }\n            autoLoad={ true }\n        />\n        : null }\n    </>\n)\n\nexport default CongratulationsAlert;","import { connect } from \"react-redux\";\nimport CongratulationsAlert from \"./CongratulationsAlert\";\n\nconst mapStateToProps = (state) => {\n    return {\n        playerName: state.playerName,\n        statistics: state.statistics,\n        isMuted: state.isMuted,\n    };\n};\n\nexport default connect(mapStateToProps, null)(CongratulationsAlert);","import React from \"react\";\r\nimport Button from \"../Button\";\r\n\r\nconst CorrectAlert = ({ handleSubmit }) => (\r\n    <>\r\n        <p>You are correct!</p>\r\n        <Button\r\n            text={ \"Next Question\" }\r\n            color={ \"#28a745\" }\r\n            click={ handleSubmit }\r\n            btnStyle={ \"button\" }\r\n        />\r\n    </>\r\n)\r\n\r\nexport default CorrectAlert;","import React from \"react\";\r\nimport Reset from \"./../Reset\";\r\n\r\nconst WrongAnswerAlert = ({ playerName, correctAnswer, statistics, currentDifficulty }) => (\r\n    <>\r\n        <p>Bad luck { playerName }, you're wrong! The right answer is { correctAnswer }</p>\r\n        { currentDifficulty !== 1 ?\r\n        <p>Well done though, you did better than { statistics }% of the people who played before!</p>\r\n        : null}\r\n        <Reset btnStyle={\"winning-button\"} />\r\n    </>\r\n)\r\n\r\nexport default WrongAnswerAlert;","import { connect } from \"react-redux\";\r\nimport WrongAnswerAlert from \"./WrongAnswerAlert\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        playerName: state.playerName,\r\n        statistics: state.statistics,\r\n        currentDifficulty: state.currentDifficulty,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(WrongAnswerAlert);","import React from \"react\";\r\nimport Loader from 'react-loader-spinner'\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\r\n\r\nconst Spinner = () => (\r\n    <div className=\"spinner\"><Loader type=\"TailSpin\" color=\"#FFF\" height={100} width={100}/></div>\r\n)\r\n\r\nexport default Spinner;","import React from \"react\";\nimport HostQuestion from \"./../HostQuestion\";\nimport FinalAnswerAlert from \"./../FinalAnswerAlert\";\nimport CongratulationsAlert from \"./../CongratulationsAlert\";\nimport CorrectAnswerAlert from \"./../CorrectAnswerAlert\";\nimport WrongAnswerAlert from \"./../WrongAnswerAlert\";\nimport Spinner from \"./../Spinner\";\n\nconst Alert = ({ correct, handleSubmit, correctAnswer, currentDifficulty, selected, handleFinalAnswer, gameOverLoaded }) => (\n    <div className={ (correct && currentDifficulty === 15) || gameOverLoaded === true ? \"win-wrapper\" : \"alert-wrapper\" }>\n        <div className={ (correct && currentDifficulty === 15) || gameOverLoaded === true ? \"win-container\" : \"alert-container\" }>\n            {\n            /*if the user refreshed the browser after wining the game*/\n            gameOverLoaded && currentDifficulty === 15 ?\n            <CongratulationsAlert/>\n\n            /*if the user refreshed the browser after getting a question wrong*/\n            : (gameOverLoaded ?\n            <WrongAnswerAlert correctAnswer={ correctAnswer }/>\n\n            /*if they didn't select an asnwer*/\n            : (!selected ?\n            <HostQuestion/>\n\n            /*if they selected an asnwer but did not confirm yet*/\n            : (selected && correct === null ?\n            <FinalAnswerAlert selected={ selected } handleFinalAnswer={ handleFinalAnswer }/>\n\n            /*if they confirmed and are correct, and it's the last question*/\n            : (correct && currentDifficulty === 15 ?\n            (!gameOverLoaded ? <Spinner/> : <CongratulationsAlert/>)\n\n            /*if they confirmed and are correct but not last question*/\n            : (correct ?\n            <CorrectAnswerAlert handleSubmit={ handleSubmit }/>\n            \n            /*if they are wrong*/\n            : (!gameOverLoaded ?\n            <Spinner/> : <WrongAnswerAlert correctAnswer={ correctAnswer }/>\n            ))))))}\n        </div>\n    </div>\n)\n\nexport default Alert;","import { connect } from \"react-redux\";\nimport Alert from \"./Alert\";\n\nimport { getQuestion } from \"./../../data/actions/api\";\n\nconst mapStateToProps = (state) => {\n    return {\n        currentDifficulty: state.currentDifficulty,\n        gameOverLoaded: state.gameOverLoaded,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleSubmit: () => dispatch(getQuestion()),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Alert);","import React, { Component } from \"react\";\r\nimport Alert from \"./../Alert\";\r\nimport Sound from 'react-sound';\r\nimport Mute from \"../Mute\";\r\n\r\nimport letsPlay from \"./../../assets/sounds/letsPlay.mp3\";\r\nimport upTo1000music from \"./../../assets/sounds/upTo1000music.mp3\";\r\nimport upTo32000music from \"./../../assets/sounds/upTo32000music.mp3\";\r\nimport finalAnswerSound from \"./../../assets/sounds/finalAnswer.mp3\";\r\nimport correctAnswerSound from \"./../../assets/sounds/correctAnswer.mp3\";\r\nimport wrongAnswerSound from \"./../../assets/sounds/wrongAnswer.mp3\";\r\nimport \"./../../assets/css/question.css\";\r\n\r\n\r\nclass Question extends Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.state = {\r\n            playerName: props.playerName,\r\n            question: props.currentQuestion.content,\r\n\r\n            answerA: props.currentQuestion.answerA.answer,\r\n            isCorrectA: props.currentQuestion.answerA.correct,\r\n\r\n            answerB: props.currentQuestion.answerB.answer,\r\n            isCorrectB: props.currentQuestion.answerB.correct,\r\n\r\n            answerC: props.currentQuestion.answerC.answer,\r\n            isCorrectC: props.currentQuestion.answerC.correct,\r\n\r\n            answerD: props.currentQuestion.answerD.answer,\r\n            isCorrectD: props.currentQuestion.answerD.correct,\r\n\r\n            selected: 0,\r\n\r\n            sound: 0,\r\n\r\n            answerCorrect: null,\r\n\r\n            currentDifficulty: props.currentDifficulty,\r\n            \r\n        };\r\n\r\n        this.handleAnswerClick = this.handleAnswerClick.bind(this);\r\n        this.handleSoundFinishedPlaying = this.handleSoundFinishedPlaying.bind(this);\r\n        this.handleFinalAnswer = this.handleFinalAnswer.bind(this);\r\n    }\r\n\r\n    handleAnswerClick(num) {\r\n        this.setState({selected: num});\r\n    }\r\n\r\n    handleSoundFinishedPlaying() {\r\n        this.setState({sound: 1});\r\n    }\r\n\r\n    handleFinalAnswer() {\r\n        let { selected, isCorrectA, isCorrectB, isCorrectC, isCorrectD, currentDifficulty } = this.state;\r\n        \r\n        this.setState({sound: 2});\r\n\r\n        setTimeout(() => {\r\n            if((selected === 1 && isCorrectA === 1) || (selected === 2 && isCorrectB === 1) || (selected === 3 && isCorrectC === 1) || (selected === 4 && isCorrectD === 1)) {\r\n                this.setState({\r\n                    answerCorrect: true,\r\n                    sound: 3,\r\n                })\r\n                if(currentDifficulty === 15) {\r\n                    this.props.handlePostGame();\r\n                } \r\n            } else {\r\n                this.setState({\r\n                    answerCorrect: false,\r\n                    sound: 4,\r\n                })\r\n                this.props.handlePostGame();\r\n            }\r\n        }, this.props.isMuted ? 0 : 3500);\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.currentQuestion.content !== this.props.currentQuestion.content) {\r\n          this.setState({\r\n            playerName: this.props.playerName,\r\n            question: this.props.currentQuestion.content,\r\n\r\n            answerA: this.props.currentQuestion.answerA.answer,\r\n            isCorrectA: this.props.currentQuestion.answerA.correct,\r\n\r\n            answerB: this.props.currentQuestion.answerB.answer,\r\n            isCorrectB: this.props.currentQuestion.answerB.correct,\r\n\r\n            answerC: this.props.currentQuestion.answerC.answer,\r\n            isCorrectC: this.props.currentQuestion.answerC.correct,\r\n\r\n            answerD: this.props.currentQuestion.answerD.answer,\r\n            isCorrectD: this.props.currentQuestion.answerD.correct,\r\n\r\n            selected: 0,\r\n\r\n            sound: this.props.currentDifficulty === 1 ? 0 : 1,\r\n\r\n            answerCorrect: null,\r\n\r\n            currentDifficulty: this.props.currentDifficulty,\r\n          })\r\n        }\r\n      }\r\n\r\n    render() {\r\n        let { answerA, answerB, answerC, answerD, selected, isCorrectA, isCorrectB, isCorrectC, isCorrectD, question, sound, currentDifficulty } = this.state;\r\n\r\n\r\n        let correctAnswer = \"\";\r\n\r\n        if (isCorrectA) {\r\n            correctAnswer = answerA;\r\n        }\r\n        if (isCorrectB) {\r\n            correctAnswer = answerB;\r\n        }\r\n        if (isCorrectC) {\r\n            correctAnswer = answerC;\r\n        }\r\n        if (isCorrectD) {\r\n            correctAnswer = answerD;\r\n        }\r\n          \r\n        let longAnswers = (answerA.length > 25 || answerB.length > 25 || answerC.length > 25 || answerD.length > 25);\r\n\r\n        let longAnswersMobile = (answerA.length > 18 || answerB.length > 18 || answerC.length > 18 || answerD.length > 18);\r\n\r\n        let longQuestions = question.length > 60;\r\n\r\n        let longQuestionsMobile = question.length > 30;\r\n\r\n        return (\r\n            <div className=\"question-bg\">\r\n                <Mute/>\r\n                { !this.props.isMuted && sound === 0 ?\r\n                <Sound\r\n                    url={ letsPlay }\r\n                    playStatus={ Sound.status.PLAYING }\r\n                    autoLoad={ true }\r\n                    onFinishedPlaying={ this.handleSoundFinishedPlaying }\r\n                />\r\n                : null }\r\n                { !this.props.isMuted && sound === 1 ?\r\n                <Sound\r\n                    url={ currentDifficulty < 6 ? upTo1000music : upTo32000music }\r\n                    playStatus={ Sound.status.PLAYING }\r\n                    autoLoad={ true }\r\n                    loop={ true }\r\n                />\r\n                : null }\r\n                { !this.props.isMuted && sound === 2 ?\r\n                <Sound\r\n                    url={ finalAnswerSound }\r\n                    playStatus={ Sound.status.PLAYING }\r\n                    autoLoad={ true }\r\n                />\r\n                : null }\r\n                { !this.props.isMuted && sound === 3 ?\r\n                <Sound\r\n                    url={ correctAnswerSound }\r\n                    playStatus={ Sound.status.PLAYING }\r\n                    autoLoad={ true }\r\n                />\r\n                : null }\r\n                { !this.props.isMuted && sound === 4 ?\r\n                <Sound\r\n                    url={ wrongAnswerSound }\r\n                    playStatus={ Sound.status.PLAYING }\r\n                    autoLoad={ true }\r\n                />\r\n                : null }\r\n                <Alert\r\n                    selected={ selected }\r\n                    handleFinalAnswer={ this.handleFinalAnswer }\r\n                    correct={ this.state.answerCorrect }\r\n                    correctAnswer={ correctAnswer }\r\n                />\r\n                <div className=\"question-answers\">\r\n                    <span className=\"question\">\r\n                        <h2 className={ longQuestions ? \"long-questions\" : (longQuestionsMobile ? \"long-questions-mobile\" : \"\") }>{ question }</h2>\r\n                    </span>\r\n                    <span className=\"answer-a\" onClick={ () => this.handleAnswerClick(1) }>\r\n                        <h4 className={\"answers\" + (longAnswers ? \" long-answers\" : ( longAnswersMobile ? \" long-answers-mobile\" : \"\" ))}\r\n                            style={{color: selected === 1 ? \"rgb(224, 215, 78)\" : \"white\"}}>\r\n                            <span className=\"bullet-point\">\r\n                                <span>&#9830; </span>A:</span><span>{ answerA }\r\n                            </span>\r\n                        </h4>\r\n                    </span>\r\n                    <span className=\"answer-b\" onClick={ () => this.handleAnswerClick(2) }>\r\n                        <h4 className={\"answers\" + (longAnswers ? \" long-answers\" : ( longAnswersMobile ? \" long-answers-mobile\" : \"\" ))}\r\n                            style={{color: selected === 2 ? \"rgb(224, 215, 78)\" : \"white\"}}>\r\n                            <span className=\"bullet-point\">\r\n                                <span>&#9830; </span>B:</span><span>{ answerB }\r\n                            </span>\r\n                        </h4>\r\n                    </span>\r\n                    <span className=\"answer-c\" onClick={ () => this.handleAnswerClick(3) }>\r\n                        <h4 className={\"answers\" + (longAnswers ? \" long-answers\" : ( longAnswersMobile ? \" long-answers-mobile\" : \"\" ))}\r\n                            style={{color: selected === 3 ? \"rgb(224, 215, 78)\" : \"white\"}}>\r\n                            <span className=\"bullet-point\">\r\n                                <span>&#9830; </span>C:</span><span>{ answerC }\r\n                            </span>\r\n                        </h4>\r\n                    </span>\r\n                    <span className=\"answer-d\" onClick={ () => this.handleAnswerClick(4) }>\r\n                        <h4 className={\"answers\" + (longAnswers ? \" long-answers\" : ( longAnswersMobile ? \" long-answers-mobile\" : \"\" ))}\r\n                            style={{color: selected === 4 ? \"rgb(224, 215, 78)\" : \"white\"}}>\r\n                            <span className=\"bullet-point\">\r\n                                <span>&#9830; </span>D:</span><span>{ answerD }\r\n                            </span>\r\n                        </h4>\r\n                    </span> \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n  \r\nexport default Question;","import { connect } from \"react-redux\";\r\nimport Question from \"./Question\";\r\n\r\nimport { getQuestion, postGame } from \"./../../data/actions/api\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        playerName: state.playerName,\r\n        currentQuestion: state.currentQuestion,\r\n        currentDifficulty: state.currentDifficulty,\r\n        isMuted: state.isMuted,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        handleLoad: () => dispatch(getQuestion()),\r\n        handlePostGame: () => dispatch(postGame()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Question);","import React from \"react\";\r\nimport Reset from \"./../Reset\"\r\n\r\nimport logo from \"./../../assets/images/logoTransparent.png\";\r\nimport \"./../../assets/css/landing.css\";\r\n\r\nconst FourOhFour = () => (\r\n    <div className=\"landing-bg\">\r\n        <img\r\n            src={ logo }\r\n            alt=\"logo\"\r\n            className=\"logo\"\r\n        />\r\n        <h2 style={{ color: \"white\" }}>Oops! It appears you navigated to a non existing page!</h2>\r\n        <Reset btnStyle={\"winning-button\"}/>\r\n    </div>\r\n)\r\n\r\nexport default FourOhFour;","import React from 'react';\nimport './App.css';\nimport Landing from \"./components/Landing\";\nimport Question from './components/Question';\nimport FourOhFour from './components/FourOhFour';\n\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <Landing />\n        </Route>\n        <Route exact path=\"/game\">\n          <Question />\n        </Route>\n        <FourOhFour/>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","export const initialState = {\r\n    playerName: \"\",\r\n    currentDifficulty: 1,\r\n    isMuted: false,\r\n    statistics: null,\r\n    gameOverLoaded: false,\r\n\r\n    currentQuestion: {\r\n        content: \"\",\r\n        amount: \"\",\r\n        answerA: {\r\n            answer: \"\",\r\n            correct: null\r\n        },\r\n\r\n        answerB: {\r\n            answer: \"\",\r\n            correct: null\r\n        },\r\n\r\n        answerC: {\r\n            answer: \"\",\r\n            correct: null\r\n        },\r\n\r\n        answerD: {\r\n            answer: \"\",\r\n            correct: null\r\n        }\r\n    }\r\n};\r\n\r\nexport default initialState;","//importing initialState to make it available to the reducer\r\nimport initialState from \"./initialState\";\r\n\r\nconst updateQuestion = (state, action) => {\r\n    return {\r\n        ...state,\r\n        currentQuestion: action.currentQuestion,\r\n        currentDifficulty: state.currentDifficulty + 1,\r\n    }\r\n} \r\n\r\nconst playerName = (state, action) => {\r\n    return {\r\n        ...state,\r\n        playerName: action.playerName,\r\n        currentQuestion: action.currentQuestion,\r\n    }\r\n}\r\n\r\nconst setSound = (state) => {\r\n    return {\r\n        ...state,\r\n        isMuted: !state.isMuted\r\n    }\r\n}\r\n\r\nconst setReset = (state) => {\r\n    return {\r\n        ...initialState,\r\n        isMuted: state.isMuted,        \r\n    }\r\n}\r\n\r\nconst setStatistics = (state, action) => {\r\n    return {\r\n        ...state,\r\n        statistics: action.data,\r\n        gameOverLoaded: true,\r\n    }\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"START_GAME\" : return playerName(state, action);\r\n        case \"SET_SOUND\" : return setSound(state);\r\n        case \"UPDATE_QUESTION\": return updateQuestion(state, action);\r\n        case \"SET_STATISTICS\": return setStatistics(state, action);\r\n        case \"RESET_GAME\": return setReset(state);\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","// import redux middlewares\r\nimport { createStore, compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport persistState from \"redux-localstorage\";\r\n\r\n// import components to pass to redux store\r\nimport reducer from './reducer';\r\nimport initialState from './initialState';\r\n\r\n// set up redux devtools\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeEnhancers(applyMiddleware(thunk),\r\n    persistState())\r\n);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from \"./data/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);","module.exports = __webpack_public_path__ + \"static/media/logoTransparent.0b801b30.png\";","module.exports = __webpack_public_path__ + \"static/media/audio.37e32b6e.svg\";","module.exports = __webpack_public_path__ + \"static/media/mute.e04237f5.svg\";","module.exports = __webpack_public_path__ + \"static/media/openingTheme.61c1eb5e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/crowdapplause.fc981ab7.mp3\";","module.exports = __webpack_public_path__ + \"static/media/letsPlay.3d8ba0a6.mp3\";","module.exports = __webpack_public_path__ + \"static/media/upTo1000music.d9cb525d.mp3\";","module.exports = __webpack_public_path__ + \"static/media/upTo32000music.78fa5376.mp3\";","module.exports = __webpack_public_path__ + \"static/media/finalAnswer.b0092313.mp3\";","module.exports = __webpack_public_path__ + \"static/media/correctAnswer.d27f45ad.mp3\";","module.exports = __webpack_public_path__ + \"static/media/wrongAnswer.e55862ad.mp3\";"],"sourceRoot":""}